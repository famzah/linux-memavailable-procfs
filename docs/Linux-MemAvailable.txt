NAME
    Linux::MemAvailable - Backport of the /proc/meminfo "MemAvailable"
    metric for Linux kernels before 3.14.

SYNOPSIS
            require 'Linux-MemAvailable.pm';

            #Linux::MemAvailable::set_debug();

            my ($avail, $meminfo) = Linux::MemAvailable::calculate();

            my $total = $meminfo->{'MemTotal'};
            printf("Available: %d / %d kB (%.0f%%)\n", $avail, $total, $avail/$total*100);

NOTE
    Kernel commit in C:
    https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?
    id=34e431b0ae398fc54ea69ff85ec700722c9da773

    WARNING: This module uses die() on errors which should never happen.
    Wrap with eval() if needed.

METHODS
    calculate() - returns a list with:

            (
                    [0] => the calculated value of MemAvailable in kB,
                    [1] => hashref containing the parsed "/proc/meminfo",
            )

    Note that you can call calculate() by supplying ($meminfo_lines_aref,
    $zoneinfo_lines_aref) as function arguments. In this case the
    calculation uses the provided array refs as a source for "/proc/meminfo"
    and "/proc/zoneinfo" respectively.

    set_debug() - enables debug messages on the STDOUT

EXAMPLES
    Easy way to consume memory in user-space: perl -e '$s = ""; for ($i = 0;
    $i < 2000; ++$i) { $s .= "A" x 1048576 }; print "Done\n"; sleep(6000);'

    Easy way to put contents into the page cache buffer: find /usr -type f
    -print0|xargs -r -0 cat >/dev/null

    NOTE: If you want to test when the system will start swapping, simply
    disable swap and then try to allocate lots of memory until you get an
    out-of-memory error.

AUTHOR
    Ivan Zahariev (famzah)

